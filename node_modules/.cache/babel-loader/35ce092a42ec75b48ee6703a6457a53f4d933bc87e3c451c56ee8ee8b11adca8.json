{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\venka\\\\Desktop\\\\ippopay\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [password, setPassword] = useState();\n  const [message, setMessage] = useState(\"\");\n  const handlesubmit = e => {\n    setPassword(e.target.value);\n  };\n  const handleValidation = e => {\n    e.preventDefault();\n    const regExp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n    if (password === \"\") {\n      setMessage(\"please enter password\");\n    } else if (regExp.text(password)) {\n      setMessage(\"password is valid\");\n    } else if (!regExp.text(password)) {\n      setMessage(\"password is invalid\");\n    } else {\n      setMessage(\" \");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"enter password\",\n          type: \"text\",\n          value: password,\n          onChange: handlesubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onSubmit: handleValidation,\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"output\",\n      children: [\"Output : \", message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5zY10iV3G24LkqrPPgufff8ziLQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","password","setPassword","message","setMessage","handlesubmit","e","target","value","handleValidation","preventDefault","regExp","text","className","children","placeholder","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/venka/Desktop/ippopay/task/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const[password,setPassword] = useState()\n  const [message,setMessage] = useState(\"\")\n  const handlesubmit=(e)=>{\n     setPassword(e.target.value)\n     \n  }\n  const handleValidation=(e)=>{\n     e.preventDefault()\n    const regExp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/\n    if(password === \"\"){\n      setMessage(\"please enter password\")\n    }else if(regExp.text(password)){\n      setMessage(\"password is valid\")\n    }else if(!regExp.text(password)){\n      setMessage(\"password is invalid\")\n    }else{\n      setMessage(\" \")\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className='container'> \n      <form >\n      <input placeholder='enter password' type= \"text\" value={password} onChange={handlesubmit}/>\n      <button onSubmit={handleValidation}>submit</button>\n      \n      \n      </form>\n      </div>\n       <span className='output'>Output : {message} </span>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGN,QAAQ,EAAE;EACxC,MAAM,CAACO,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAMS,YAAY,GAAEC,CAAC,IAAG;IACrBJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAE9B,CAAC;EACD,MAAMC,gBAAgB,GAAEH,CAAC,IAAG;IACzBA,CAAC,CAACI,cAAc,EAAE;IACnB,MAAMC,MAAM,GAAG,iDAAiD;IAChE,IAAGV,QAAQ,KAAK,EAAE,EAAC;MACjBG,UAAU,CAAC,uBAAuB,CAAC;IACrC,CAAC,MAAK,IAAGO,MAAM,CAACC,IAAI,CAACX,QAAQ,CAAC,EAAC;MAC7BG,UAAU,CAAC,mBAAmB,CAAC;IACjC,CAAC,MAAK,IAAG,CAACO,MAAM,CAACC,IAAI,CAACX,QAAQ,CAAC,EAAC;MAC9BG,UAAU,CAAC,qBAAqB,CAAC;IACnC,CAAC,MAAI;MACHA,UAAU,CAAC,GAAG,CAAC;IACjB;EACF,CAAC;EACD,oBACEN,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAC,QAAA,eAC1BhB,OAAA;QAAAgB,QAAA,gBACAhB,OAAA;UAAOiB,WAAW,EAAC,gBAAgB;UAACC,IAAI,EAAE,MAAM;UAACR,KAAK,EAAEP,QAAS;UAACgB,QAAQ,EAAEZ;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAC3FvB,OAAA;UAAQwB,QAAQ,EAAEb,gBAAiB;UAAAK,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAG5C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,eACLvB,OAAA;MAAMe,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,WAAS,EAACX,OAAO,EAAC,GAAC;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChD;AAEV;AAACrB,EAAA,CAjCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}